/*
 * OpenAI API
 *
 * APIs for sampling from and fine-tuning language models
 *
 * API version: 1.2.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// CancelFineTune - Immediately cancel a fine-tune job. 
func CancelFineTune(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateAnswer - Answers the specified question using the provided documents and examples.  The endpoint first [searches](/docs/api-reference/searches) over provided documents or files to find relevant context. The relevant context is combined with the provided examples and question to create the prompt for [completion](/docs/api-reference/completions). 
// Deprecated
func CreateAnswer(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateChatCompletion - Creates a completion for the chat message
func CreateChatCompletion(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateClassification - Classifies the specified `query` using provided examples.  The endpoint first [searches](/docs/api-reference/searches) over the labeled examples to select the ones most relevant for the particular query. Then, the relevant examples are combined with the query to construct a prompt to produce the final label via the [completions](/docs/api-reference/completions) endpoint.  Labeled examples can be provided via an uploaded `file`, or explicitly listed in the request using the `examples` parameter for quick tests and small scale use cases. 
// Deprecated
func CreateClassification(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateCompletion - Creates a completion for the provided prompt and parameters
func CreateCompletion(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateEdit - Creates a new edit for the provided input, instruction, and parameters.
func CreateEdit(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateEmbedding - Creates an embedding vector representing the input text.
func CreateEmbedding(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateFile - Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit. 
func CreateFile(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateFineTune - Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning) 
func CreateFineTune(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateImage - Creates an image given a prompt.
func CreateImage(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateImageEdit - Creates an edited or extended image given an original image and a prompt.
func CreateImageEdit(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateImageVariation - Creates a variation of a given image.
func CreateImageVariation(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateModeration - Classifies if text violates OpenAI's Content Policy
func CreateModeration(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateSearch - The search endpoint computes similarity scores between provided query and documents. Documents can be passed directly to the API if there are no more than 200 of them.  To go beyond the 200 document limit, documents can be processed offline and then used for efficient retrieval at query time. When `file` is set, the search endpoint searches over all the documents in the given file and returns up to the `max_rerank` number of documents. These documents will be returned along with their search scores.  The similarity score is a positive score that usually ranges from 0 to 300 (but can sometimes go higher), where a score above 200 usually means the document is semantically similar to the query. 
// Deprecated
func CreateSearch(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateTranscription - Transcribes audio into the input language.
func CreateTranscription(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CreateTranslation - Translates audio into into English.
func CreateTranslation(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// DeleteFile - Delete a file.
func DeleteFile(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// DeleteModel - Delete a fine-tuned model. You must have the Owner role in your organization.
func DeleteModel(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// DownloadFile - Returns the contents of the specified file
func DownloadFile(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// ListEngines - Lists the currently available (non-finetuned) models, and provides basic information about each one such as the owner and availability.
// Deprecated
func ListEngines(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// ListFiles - Returns a list of files that belong to the user's organization.
func ListFiles(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// ListFineTuneEvents - Get fine-grained status updates for a fine-tune job. 
func ListFineTuneEvents(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// ListFineTunes - List your organization's fine-tuning jobs 
func ListFineTunes(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// ListModels - Lists the currently available models, and provides basic information about each one such as the owner and availability.
func ListModels(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// RetrieveEngine - Retrieves a model instance, providing basic information about it such as the owner and availability.
// Deprecated
func RetrieveEngine(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// RetrieveFile - Returns information about a specific file.
func RetrieveFile(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// RetrieveFineTune - Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning) 
func RetrieveFineTune(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// RetrieveModel - Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
func RetrieveModel(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

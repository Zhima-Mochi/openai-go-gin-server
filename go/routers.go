/*
 * OpenAI API
 *
 * APIs for sampling from and fine-tuning language models
 *
 * API version: 1.2.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name        string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method      string
	// Pattern is the pattern of the URI.
	Pattern     string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/v1/",
		Index,
	},

	{
		"CancelFineTune",
		http.MethodPost,
		"/v1/fine-tunes/:fine_tune_id/cancel",
		CancelFineTune,
	},

	{
		"CreateAnswer",
		http.MethodPost,
		"/v1/answers",
		CreateAnswer,
	},

	{
		"CreateChatCompletion",
		http.MethodPost,
		"/v1/chat/completions",
		CreateChatCompletion,
	},

	{
		"CreateClassification",
		http.MethodPost,
		"/v1/classifications",
		CreateClassification,
	},

	{
		"CreateCompletion",
		http.MethodPost,
		"/v1/completions",
		CreateCompletion,
	},

	{
		"CreateEdit",
		http.MethodPost,
		"/v1/edits",
		CreateEdit,
	},

	{
		"CreateEmbedding",
		http.MethodPost,
		"/v1/embeddings",
		CreateEmbedding,
	},

	{
		"CreateFile",
		http.MethodPost,
		"/v1/files",
		CreateFile,
	},

	{
		"CreateFineTune",
		http.MethodPost,
		"/v1/fine-tunes",
		CreateFineTune,
	},

	{
		"CreateImage",
		http.MethodPost,
		"/v1/images/generations",
		CreateImage,
	},

	{
		"CreateImageEdit",
		http.MethodPost,
		"/v1/images/edits",
		CreateImageEdit,
	},

	{
		"CreateImageVariation",
		http.MethodPost,
		"/v1/images/variations",
		CreateImageVariation,
	},

	{
		"CreateModeration",
		http.MethodPost,
		"/v1/moderations",
		CreateModeration,
	},

	{
		"CreateSearch",
		http.MethodPost,
		"/v1/engines/:engine_id/search",
		CreateSearch,
	},

	{
		"CreateTranscription",
		http.MethodPost,
		"/v1/audio/transcriptions",
		CreateTranscription,
	},

	{
		"CreateTranslation",
		http.MethodPost,
		"/v1/audio/translations",
		CreateTranslation,
	},

	{
		"DeleteFile",
		http.MethodDelete,
		"/v1/files/:file_id",
		DeleteFile,
	},

	{
		"DeleteModel",
		http.MethodDelete,
		"/v1/models/:model",
		DeleteModel,
	},

	{
		"DownloadFile",
		http.MethodGet,
		"/v1/files/:file_id/content",
		DownloadFile,
	},

	{
		"ListEngines",
		http.MethodGet,
		"/v1/engines",
		ListEngines,
	},

	{
		"ListFiles",
		http.MethodGet,
		"/v1/files",
		ListFiles,
	},

	{
		"ListFineTuneEvents",
		http.MethodGet,
		"/v1/fine-tunes/:fine_tune_id/events",
		ListFineTuneEvents,
	},

	{
		"ListFineTunes",
		http.MethodGet,
		"/v1/fine-tunes",
		ListFineTunes,
	},

	{
		"ListModels",
		http.MethodGet,
		"/v1/models",
		ListModels,
	},

	{
		"RetrieveEngine",
		http.MethodGet,
		"/v1/engines/:engine_id",
		RetrieveEngine,
	},

	{
		"RetrieveFile",
		http.MethodGet,
		"/v1/files/:file_id",
		RetrieveFile,
	},

	{
		"RetrieveFineTune",
		http.MethodGet,
		"/v1/fine-tunes/:fine_tune_id",
		RetrieveFineTune,
	},

	{
		"RetrieveModel",
		http.MethodGet,
		"/v1/models/:model",
		RetrieveModel,
	},
}
